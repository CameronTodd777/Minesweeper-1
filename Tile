
import javafx.geometry.Insets;
import javafx.scene.control.Label;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;

public class Tile extends StackPane {
    private final double TILE_WIDTH, TILE_HEIGHT;
    private GameBoard gameBoard;

    // Just for a demo
    private Label label;

    Tile(double tileWidth, double tileHeight, GameBoard gameBoard) {
        TILE_WIDTH = tileWidth;
        TILE_HEIGHT = tileHeight;
        this.gameBoard = gameBoard;

        setUpBoarder();
        setUpBackground();


        label = new Label("");
        getChildren().addAll(label);

        // Just a demo to play with for now.
        setOnMouseClicked(event -> {
            if (label.getText().equals("")) {
                label.setText("X");
                label.setTextFill(Color.RED);
            } else
                label.setText("");
        });
    }

    public void setUpBackground() {
        BackgroundFill background_fill = new BackgroundFill(Color.LIGHTGRAY,
                CornerRadii.EMPTY, Insets.EMPTY);
        Background background = new Background(background_fill);
        setBackground(background);
    }

    // Creates a black boarder around each tile
    private void setUpBoarder() {
        Rectangle boarder = new Rectangle(getTranslateX(),
                getTranslateY(),
                TILE_WIDTH,
                TILE_WIDTH);
        boarder.setFill(null);
        boarder.setStroke(Color.BLACK);
        getChildren().addAll(boarder);
    }
}
